<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on からまるのブログ</title><link>https://karamaru-alpha.com/posts/</link><description>Recent content in Posts on からまるのブログ</description><generator>Hugo -- gohugo.io</generator><language>ja</language><lastBuildDate>Sat, 16 Dec 2023 12:14:44 +0900</lastBuildDate><atom:link href="https://karamaru-alpha.com/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>レイヤードアーキテクチャにおけるトランザクションのエレガントな抽象化法2選</title><link>https://karamaru-alpha.com/posts/layered-tx/</link><pubDate>Sat, 16 Dec 2023 12:14:44 +0900</pubDate><guid>https://karamaru-alpha.com/posts/layered-tx/</guid><description>この記事は技術書典『SGE Go Tech Book Vol.04』で自分が書いた章を書き直したものです。
レイヤードアーキテクチャにおけるトランザクションの実装（主に抽象化）の方法について、2つの例を紹介します。
本章のサンプルコードは次のURLから参照できます。
https://github.com/karamaru-alpha/tx-layer
レイヤードアーキテクチャにおけるトランザクション実装の悩みどころ レイヤードアーキテクチャとは レイヤードアーキテクチャとは責務によってシステムを複数の層に分割する設計手法です。 それぞれの層の関心を疎結合に保つことで、変更の影響範囲が制限される・テスト（モック）がしやすいなどのメリットがあるとされています。
以下は典型的なレイヤードアーキテクチャの層分けです。
プレゼンテーション(handler)層: ユーザーインターフェース・表示ロジックを担当する アプリケーション(usecase)層: ビジネスロジックの進行を担当する。プレゼンテーション層から値を受け取り、ドメイン層を活用して処理を進める ドメイン(domain)層: モデルの定義・振る舞いを定義する。データベースアクセスの抽象Repositoryに代表される、アプリケーション層とインフラストラクチャ層の中継役も担う インフラストラクチャ(infra)層: データベースなど外部サービスへのアクセスを主に担当する 密結合なトランザクション実装例 レイヤードアーキテクチャを採用したコードにおいて、トランザクションはどのように実装するのが良いでしょうか？ 「MySQLに保存されているユーザーの名前を更新する」というケースを例として考えてみましょう。
さて、ユースケース単位でトランザクションを張りたい場合、愚直に実装すると以下のようになります。 （本章ではMySQLとの疎通にGoの標準パッケージdatabase/sqlの拡張であるsqlxパッケージを用います）
package構成$ tree ./anti-pattern/ ├── domain │ └── repository │ └── user.go ├── infra │ └── mysql │ └── repository │ └── user.go └── usecase └── user.go anti-pattern/usecase/user.gotype UserInteractor interface { UpdateName(ctx context.Context, userID, name string) error } type userInteractor struct { db *sqlx.</description></item><item><title>生成AIを用いて2日でVTuberモデルを作成しアバターで会議に出るまで</title><link>https://karamaru-alpha.com/posts/init-vtuber/</link><pubDate>Wed, 13 Dec 2023 03:00:36 +0900</pubDate><guid>https://karamaru-alpha.com/posts/init-vtuber/</guid><description>&lt;p>絵を描いたことないバックエンドエンジニアが、生成AIの力を借りながらVTuberモデルを作成し、MacBookPro単体でアバターでZoomやハドルに出るまでの全てを書きました。
&amp;ldquo;アバター作りたいけど絵描けないしなんか大変そう&amp;hellip;&amp;ldquo;と思ってる人に参考にしてもらえれば幸いです。
2徹しました。&lt;/p></description></item><item><title>個人的優勝ターミナルツール3選(warp/z/peco)</title><link>https://karamaru-alpha.com/posts/useful-tarminal-tool/</link><pubDate>Fri, 17 Nov 2023 01:44:19 +0900</pubDate><guid>https://karamaru-alpha.com/posts/useful-tarminal-tool/</guid><description>&lt;p>業務効率爆上がりな主観的おすすめターミナルツール3選を推す記事です🔥&lt;/p></description></item><item><title>対isuconメトリクスツールisumaru作った</title><link>https://karamaru-alpha.com/posts/isumaru/</link><pubDate>Mon, 02 Oct 2023 00:12:48 +0900</pubDate><guid>https://karamaru-alpha.com/posts/isumaru/</guid><description>&lt;p>対isuconメトリクスツール&amp;quot;isumaru&amp;quot;作りました。&lt;/p></description></item><item><title>wasmプラグインの作成/呼び出しを多言語でできるExtismを試す</title><link>https://karamaru-alpha.com/posts/try-extism/</link><pubDate>Sat, 01 Apr 2023 17:06:45 +0900</pubDate><guid>https://karamaru-alpha.com/posts/try-extism/</guid><description>&lt;p>先日はWASM I/Oがありましたね。
中でも、wasmプラグインの作成/呼び出しを言語跨ぎでできるExtismが気になったので試してみました。&lt;/p></description></item><item><title>自作言語をwasm変換するコンパイラをrustで作った</title><link>https://karamaru-alpha.com/posts/create-wasm-compiler/</link><pubDate>Wed, 01 Mar 2023 05:25:00 +0900</pubDate><guid>https://karamaru-alpha.com/posts/create-wasm-compiler/</guid><description>&lt;p>rust/wasmに入門するために、自作言語をwasmバイナリにマッピングするコンパイラを作りました。&lt;/p>
&lt;p>機能は限定的で、四則演算を関数としてexportし、wasmで呼び出すまでを実装しています。&lt;/p>
&lt;p>どちらも初めて1ヶ月程度の知識なので細かい点はご容赦くださいmm&lt;/p></description></item><item><title>貯金に適した口座の使い分けを考えてみる</title><link>https://karamaru-alpha.com/posts/consider-saving-strategy/</link><pubDate>Sun, 08 Jan 2023 00:16:21 +0900</pubDate><guid>https://karamaru-alpha.com/posts/consider-saving-strategy/</guid><description>&lt;p>新社会人になって8ヶ月経ちました。からまるです。&lt;/p>
&lt;p>最近、意図せず口座からお金がなくなっていっています。「貯金とは毎月のお賃金×経過月数」というのは幻で、学生に比べ多くの給料を貰え行動範囲がぐっと広がる新社会人が素直にお金を貯められる訳がありませんでした。&lt;/p></description></item><item><title>hello world!</title><link>https://karamaru-alpha.com/posts/hello-world/</link><pubDate>Mon, 02 Jan 2023 22:47:33 +0900</pubDate><guid>https://karamaru-alpha.com/posts/hello-world/</guid><description>独自ドメインのブログってなんかかっこいいですよねーー！ だから初めてみました。</description></item></channel></rss>